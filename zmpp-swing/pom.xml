<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.zmpp</groupId>
  <artifactId>zmpp-swing</artifactId>
  <version>1.0-SNAPSHOT</version>

  <!-- General information -->
  <name>zmpp-swing</name>
  <description>Swing components for ZMPP</description>
  <inceptionYear>2010</inceptionYear>

  <!-- Properties -->
  <properties>
    <scala.version>2.8.1</scala.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>zmpp.sourceforge.net</id>
      <name>ZMPP Maven2 Repository</name>
      <url>http://zmpp.sourceforge.net/maven2</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.testing</groupId>
      <artifactId>specs_2.8.0</artifactId>
      <version>1.6.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.zmpp</groupId>
      <artifactId>zmpp-glulx</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.zmpp</groupId>
      <artifactId>zmpp-glk</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.zmpp</groupId>
      <artifactId>zmpp-common</artifactId>
      <version>2.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    
    <!-- JavaSound -->
    <dependency>
      <groupId>org.muforge</groupId>
      <artifactId>muxm-spi</artifactId>
      <version>0.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jorbis</artifactId>
      <version>0.0.15</version>
      <scope>run</scope>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jogg</artifactId>
      <version>0.0.7</version>
      <scope>run</scope>
    </dependency>
    <dependency>
      <groupId>org.tritonus</groupId>
      <artifactId>tritonus-share</artifactId>
      <version>0.3.6</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javazoom</groupId>
      <artifactId>vorbisspi</artifactId>
      <version>1.0.3</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <args>
            <arg>-deprecation</arg>
            <arg>-optimise</arg>
          </args>
	  <!--
	      Simply run this Scala project with
	      mvn scala:run
	  -->
	  <launchers>
	    <launcher>
	      <id>stdrun</id>
	      <mainClass>org.zmpp.glulx.swing.GlulxMain</mainClass>
        <!--
	      <mainClass>org.zmpp.glulx.swing.BlorbViewer</mainClass>
        -->
	      <args>
	        <!--
		      <arg>src/test/resources/Alabaster.gblorb</arg>
		      -->
	      </args>
	      <jvmArgs>
	    	  <jvmArg>-Xmx512m</jvmArg>
	    	  <jvmArg>-Djava.util.logging.config.file=logging.properties</jvmArg>
	    	  <jvmArg>-Dapple.awt.graphics.UseQuartz=true</jvmArg>
	      </jvmArgs>
	    </launcher>
	  </launchers>
        </configuration>
      </plugin>
      <!-- maven-eclipse -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <buildcommands>
            <buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>
          </buildcommands>
          <additionalProjectnatures>
            <projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>
          </additionalProjectnatures>
          <classpathContainers>	    <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
<classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
      <!-- Assembly: jar-with-dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-4</version>
        <configuration>
          <descriptors>
            <descriptor>assembly.xml</descriptor>
          </descriptors>
          <archive>
            <manifest>
              <mainClass>org.zmpp.glulx.swing.GlulxMain</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals><goal>single</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- ProGuard -->
  <plugin>
	  <groupId>com.pyx4me</groupId>
	  <artifactId>proguard-maven-plugin</artifactId>
	  <executions>
	    <execution>
	      <phase>package</phase>
	      <goals><goal>proguard</goal></goals>
	    </execution>	  
	  </executions>
	  <configuration>
	    <includeDependency>false</includeDependency>
	    <injar>${project.build.finalName}-jar-with-dependencies.jar</injar>
	    <outjar>${project.build.finalName}-small.jar</outjar>
	    <proguardInclude>${basedir}/proguard.conf</proguardInclude>
      <maxMemory>1024m</maxMemory>
	  </configuration>
  </plugin>
  </plugins>
  </build>
</project>

